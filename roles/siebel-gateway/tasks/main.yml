---
# tasks file for siebel gateway
- name: enable nfs-related services
  service:
   name: "{{ item }}"
   enabled: true
   state: started
  with_items:
  - rpcbind
  - nfs-lock
  when: ansible_distribution != "AIX"

- name: mount repository on linux
  mount:
    name: "/mnt{{ software_repository_path }}"
    src: "{{ hostvars[groups['repository-server'][0]]['ansible_default_ipv4']['address'] }}:{{ software_repository_path }}"
    fstype: nfs
    state: mounted
  when: ansible_distribution != "AIX"

- name: mount repository on aix
  command: /usr/sbin/mknfsmnt -f "/mnt{{ software_repository_path }}" -d "{{ software_repository_path }}" -h "{{ hostvars[groups['repository-server'][0]]['ansible_default_ipv4']['address'] }}" -M sys -N -a -t rw -w bg -Y -Z -X -H -j -q -g
  when: ansible_distribution == "AIX"

- name: create groups
  group:
    name: "{{ item }}"
    state: present
  with_items:
    - sse_role

- name: create user
  user:
    name: "{{ item }}"
    state: present
    group: sse_role
    groups: sse_role,oinstall
  with_items:
    - siebel

- name: create siebel_base
  file:
    path: "{{item}}"
    state: directory
    mode: 0775
    owner: siebel
    group: sse_role
  with_items:
    - "{{siebel_base_path}}"
    - "{{siebel_base_path}}/gw/oraInventory"
    - "{{siebel_base_path}}/sfs"	

- name: create siebel gw oraInventory
  blockinfile:
    path: "{{siebel_base_path}}/gw/oraInventory/oraInst.loc"
    create: yes
    mode: 0775
    owner: siebel
    group: sse_role
    block: |
       inventory_loc={{siebel_base_path}}/gw/oraInventory
       inst_group=siebel

- name: get java_home on linux
  find:
    paths: "/opt/"
    patterns: "jdk*"
    file_type: directory
  register: java_home
  when: ansible_distribution != "AIX"
  
- name: get java_home on aix
  find:
    paths: "/usr/"
    patterns: "java71_64"
    file_type: directory
  register: java_home
  when: ansible_distribution == "AIX"

- name: create siebel .bash_profile
  blockinfile:
    path: /home/siebel/.bash_profile
    create: yes
    block: |	   
       # Oracle Settings
       TMP={{siebel_base_path}}/tmp; export TMP
       TMPDIR=$TMP; export TMPDIR
       ORACLE_BASE={{siebel_base_path}}/oracle_client; export ORACLE_BASE
       ORACLE_HOME={{siebel_base_path}}/oracle_client/client; export ORACLE_HOME
       ORACLE_SID=orcl; export ORACLE_SID
       PATH=/usr/sbin:$PATH; export PATH
       PATH=$ORACLE_HOME/bin:$PATH; export PATH
       LD_LIBRARY_PATH=$ORACLE_HOME/lib:/lib:/usr/lib; export LD_LIBRARY_PATH
       export LIBPATH=$LD_LIBRARY_PATH
       RESOLV_MULTI=off ; export RESOLV_MULTI

- name: template install gateway response file
  template: 
    src: roles/siebel-gateway/files/siebel-{{siebel_version}}-install-gw.rsp.j2
    dest: /tmp/siebel-{{siebel_version}}-install-gw.rsp

- name: install gateway
  shell : "source /home/siebel/.bash_profile && ./runInstaller -silent -waitforcompletion -responseFile /tmp/siebel-{{siebel_version}}-install-gw.rsp -jreloc {{java_home.files[0].path}} -invPtrLoc {{siebel_base_path}}/gw/oraInventory/oraInst.loc"
  become: true
  become_user: siebel
  become_method: su
  args:
    chdir: "{{ software_repository_path }}/siebel-{{target_platform}}-{{ siebel_version }}/Siebel_Install_Image/16.0.0.0/AIX/Server/Siebel_Enterprise_Server/Disk1/install"
    executable: "/usr/bin/bash"
    creates: "{{siebel_base_path}}/gw/16.0.0.0.0/ses/gtwysrvr/cfgenv.sh"

- name: template config gateway response file
  template: 
    src: roles/siebel-gateway/files/siebel-{{siebel_version}}-config-gw.rsp.j2
    dest: /tmp/siebel-{{siebel_version}}-config-gw.rsp

- name: config gateway
  shell : "source /home/siebel/.bash_profile && source {{siebel_base_path}}/gw/16.0.0.0.0/ses/gtwysrvr/cfgenv.sh && ./config.sh -mode enterprise  -responseFile /tmp/siebel-{{siebel_version}}-config-gw.rsp"
  become: true
  become_user: siebel
  become_method: su
  args:
    chdir: "{{siebel_base_path}}/gw/16.0.0.0.0/ses/config"
    executable: "/usr/bin/bash"
    creates: "{{siebel_base_path}}/gw/16.0.0.0.0/ses/gtwysrvr/sys/siebns.dat"

- name: template config enterprise response file
  template: 
    src: roles/siebel-gateway/files/siebel-{{siebel_version}}-config-enterprise.rsp.j2
    dest: /tmp/siebel-{{siebel_version}}-config-enterprise.rsp

- name: config enterprise
  shell : "source /home/siebel/.bash_profile && source {{siebel_base_path}}/gw/16.0.0.0.0/ses/gtwysrvr/siebenv.sh && ./config.sh -mode enterprise  -responseFile /tmp/siebel-{{siebel_version}}-config-enterprise.rsp"
  become: true
  become_user: siebel
  become_method: su
  args:
    chdir: "{{siebel_base_path}}/gw/16.0.0.0.0/ses/config"
    executable: "/usr/bin/bash"
    creates: "{{siebel_base_path}}/gw/16.0.0.0.0/ses/gtwysrvr/fs/att"

- name: template config swe_profile response file
  template: 
    src: roles/siebel-gateway/files/siebel-{{siebel_version}}-config-swe_profile.rsp.j2
    dest: /tmp/siebel-{{siebel_version}}-config-swe_profile.rsp

- name: config swe_profile
  shell : "source /home/siebel/.bash_profile && source {{siebel_base_path}}/gw/16.0.0.0.0/ses/gtwysrvr/siebenv.sh && ./config.sh -mode enterprise  -responseFile /tmp/siebel-{{siebel_version}}-config-swe_profile.rsp"
  become: true
  become_user: siebel
  become_method: su
  args:
    chdir: "{{siebel_base_path}}/gw/16.0.0.0.0/ses/config"
    executable: "/usr/bin/bash"
    creates: "{{siebel_base_path}}/gw/16.0.0.0.0/ses/gtwysrvr/admin/Webserver/eapps.cfg"	